= schmobile

A mobile user agent detection Rack middleware. It does this by providing +#is_mobile?+ to +Rack::Request+

== Forcing mobile mode

You can force toggle mobile mode by sending +is_mobile=true+ and +is_mobile=false+ as
parameters in the request URL. This setting will be stored in the session for subsequent requests.
This entirely overrides the user agent detection.

== User agent detection

You can add/remove user agents like so:

  Rack::Schmobile::UserAgents.add_user_agent_pattern("wibble")
  Rack::Schmobile::UserAgents.remove_user_agent_pattern("ipad")

== Filters

The outcome of the +request.is_mobile?+ call is the product of a series of filters getting evaluated
against the request. You can manipulate the Rack::Schmobile::Filters::CHAIN array to alter if a
request is deemed mobile or not. Add your own filter to bypass the check depending on e.g. location
or request format.

== Redirecting

It can be configured to return the user to an explicit destination:

  use Rack::Schmobile, :redirect_to => "/mobile"

It supports string interpolation for dynamic destinations:

  use Rack::Schmobile, :redirect_to => "/mobile/#!/{{path}}"

Finally the middleware provides a request level method to determine if the client is a mobile device

  Rack::Request#is_mobile?

== Rolling out

  use Rack::Schmobile, :redirect_to => "/mobile", :if => Proc.new { |request| request.host =~ /staging/ }

== Thanks

Not quite what we were looking for, but good inspiration and may work for you:

  https://github.com/talison/rack-mobile-detect
  https://github.com/brendanlim/mobile-fu


== Contributing to schmobile

* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 Morten Primdahl. See LICENSE.txt for
further details.

